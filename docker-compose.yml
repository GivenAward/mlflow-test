services:
  mlflow-db:
    env_file:
      - .env
    image: postgres
    container_name: mlflow_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DATABASE=${PG_DATABASE}
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "${PG_PORT}", "-U", "${PG_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3
  minio:
    env_file:
      - .env
    image: minio/minio
    container_name: minio
    ports:
      - "${MINIO_PORT}:9000"  # S3 API용
      - "${MINIO_CONSOLE_PORT}:9001"  # 관리용 콘솔
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ${MINIO_CONSOLE_ADDRESS}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3
  mlflow:
    env_file:
      - .env
    image: ghcr.io/mlflow/mlflow:v2.0.1
    container_name: mlflow-server
    depends_on:
      mlflow-db:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "192.168.0.100:${MLFLOW_PORT}:5000"  # 내부망 전용 바인딩
    restart: unless-stopped
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: >
      sh -c "pip install psycopg2-binary boto3 && mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri postgresql://${PG_USER}:${PG_PASSWORD}@mlflow-db:${PG_PORT}/${PG_DATABASE}
      --default-artifact-root s3://mlflow/"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MLFLOW_PORT}/"]
      interval: 5s
      timeout: 5s
      retries: 3
